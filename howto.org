* How To (solved)
** middle/top/bottom of window
*** M-r
** resize windows
*** windsize-up windsize-down
** minibuffer history matching preceding chars
*** C-r is a better solution
** rectangular select
*** C-SPC C-x SPC
** case insensitive buffer-name completion
*** read-buffer-completion-ignore-case
** kill this buffer
*** C-x k
** hide scrollbars
*** scroll-bar-mode
** indent line/region
*** TAB :: line or region
*** C-M-\ :: region
** go to beginning of search result rather than end
*** add a function to isearch-mode-end-hook
** why did i have to specify string literals to get the right colors, rather than changing the variables containing such strings?
*** theme used defvar, which is resistant to re-evaluation; you'd have to restart emacs to get the variable changes to show up
** toggle hl-line off in buffer
*** M-s-; keybinding
* How To
** use-package :ensure keyword
** bind C-w to backward-kill-word when region inactive (or maybe just when in evil insert state?)
** zoom windows
** make switch-to-buffer select other frame if it's visible there
*** ido-mode does this. how can I do it outside of ido-mode?
** single space after sentence
** replace in region without activating region
** open a file/buffer in other window
** toggle between alt files (header/implementation/test/etc)
** mimic prev/next line chars (like C-e/C-y in vim)
** swap window positions
** open newline below, from mid-line
** fringe color same as background
** minibuffer inc-search autoaccept
** minibuffer curly-brace completion hints (ido ?)
** auto-indent as you type
** use framesets or winner-mode to replace vim-like tabs
** add flyspell-prog-mode to prog-mode-hook
** backward-kill-word (C-w) in insert/minibuffer
** color past 90 chars
** color past eof
** refresh color theme
** colorize ansi sgr codes (e.g. when viewing log file)
*** tty-format.el ?
** completion (word/line/path)
*** TAB (or M-TAB if tab-always-indent is t)
*** find-file-at-point
*** hippie-expand
** ctags (etags?)
** indent space vs tab
*** indent-tabs-mode
** less info in Dired listings
** line numbers toggle
** partial line completion (cursor to end of line)
** scroll offset to 1 line
** reformat text (like vim gq)
** switch other window to its previous buffer
** set bash indentation to 2 spaces
** smooth scrolling with external mouse wheel
** whitespace faces
** reorg windows (split vert vs horiz)
** sql beautify
** visit recent file
** what does ido c-k do?
** kill this/other window
*** C-x 0
** jump by block (like } in vim)
** jump back (like C-o in vim)
** aggressive-indent-mode
** multi-cursor
** prettier org mode
*** org-bullets
*** org-beautify-theme
** multiple cursors
** semantic layer in spacemacs
** scroll inactive frame without changing state of status bars
** lazy load package.el
*** This? (use-package package :defer)
** check if use-package is installed, and if not load package.el and install use-package
** mouse in terminal
*** fixed?
** accept and execute C-r result in minibuffer
*** some custom C-<return> binding?
* Packages to try
** Undo-tree
** Winner-mode
** Helm | ido-vertical-mode | Ivy-mode | Swiper | Counsel
** idle-highlight-mode
** find-file-in-project
** reconcile C-<return> | S-<return> with Org-mode bindings
** smartparens
** Smartparens or Paredit
** Cedit
** magit
** ERC so I can get on IRC channel #evil-mode on irc.freenode.net
** https://github.com/Dewdrops/powerline
* Evil-mode
  * C-u in insert mode? (maybe C-x C-u from insert state)
*** evil-want-C-u-scroll provides something similar outside of Insert state. maybe something like that
** evil-args
** evil-leader
** keybindings
*** (define-key evil-normal-state-map "\C-w\C-h" 'evil-window-left)
*** use U for redo, C-r (in normal state) for isearch-backward-regexp
* Questions
** What are the different load-paths for?
*** /Users/ivan/.emacs.d/elpa/...
*** /usr/local/share/emacs/site-lisp/...
*** /usr/local/Cellar/emacs-mac/emacs-24.5-z-mac-5.18/share/emacs/24.5/lisp/...
** how should i confugure (use-package :config, add-hooks, etc.)
*** ediff
** why are the rgb colors off from what they claim?
** why did I have to change from "#ffffff" to "white" to get terminal to show a white background?
** why are comments and window separators invisible in terminal?
